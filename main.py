from datetime import datetime
import os
import discord
from discord.ext import commands
from discord import app_commands

from views.buttons import RegisterView
from core.utils import (
    format_list,
    load_data,
    save_data,
    update_status_channel,
    build_registration_embed
)

intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    bot.add_view(RegisterView())

    try:
        synced = await bot.tree.sync()
        print(f"üîß Synced {len(synced)} slash command(s)")
    except Exception as e:
        print(f"‚ùå Slash sync failed: {e}")

@bot.tree.command(name="menu", description="–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (admin only)")
async def menu(interaction: discord.Interaction):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
        return

    await interaction.response.send_message("–ú–µ–Ω—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", view=RegisterView(), ephemeral=True)

@bot.tree.command(name="list", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
async def show_list(interaction: discord.Interaction):
    text = await format_list(interaction.guild)
    await interaction.response.send_message(f"üìã –°–ü–ò–°–û–ö –£–ß–ê–°–¢–ù–ò–ö–û–í\n\n{text}", ephemeral=True)

@bot.tree.command(name="—Å–±–æ—Ä", description="–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –ª–∏–º–∏—Ç–æ–º")
@app_commands.describe(
    –Ω–∞–∑–≤–∞–Ω–∏–µ="–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
    –¥–∞—Ç–∞="–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è",
    —Å–ª–æ—Ç—ã="–ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
)
async def create_event(interaction: discord.Interaction, –Ω–∞–∑–≤–∞–Ω–∏–µ: str, –¥–∞—Ç–∞: str, —Å–ª–æ—Ç—ã: int):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Å–±–æ—Ä.", ephemeral=True)
        return
    try:
        datetime.strptime(–¥–∞—Ç–∞, "%d.%m.%Y %H:%M")
    except ValueError:
        await interaction.response.send_message(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: `–¥–¥.–º–º.–≥–≥–≥–≥ —á—á:–º–º` (–Ω–∞–ø—Ä–∏–º–µ—Ä, 05.05.2025 18:30)",
            ephemeral=True
        )
        return

    save_data({
        "main_list": [],
        "extra_list": [],
        "max_main": —Å–ª–æ—Ç—ã,
        "title": –Ω–∞–∑–≤–∞–Ω–∏–µ,
        "date": –¥–∞—Ç–∞,
        "message_id": None,
        "mention_mode": None
    })

    from core.utils import build_registration_embed

    embed = await build_registration_embed(interaction.guild, interaction.user)
    message = await interaction.channel.send(embed=embed, view=RegisterView())


    data = load_data()
    data["message_id"] = message.id
    save_data(data)

    await interaction.response.send_message("‚úÖ –°–±–æ—Ä —Å–æ–∑–¥–∞–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!", ephemeral=True)


@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    bot.add_view(RegisterView())  


def run_bot(token: str):
    bot.run(token)
