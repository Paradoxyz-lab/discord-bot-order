from core.utils import load_data, save_data, get_priority

TEST_MODE = True

async def handle_join(member):
    data = load_data()
    main = data["main_list"]
    extra = data["extra_list"]
    max_main = data["max_main"]

    user_id = str(member.id)
    user_priority = get_priority(member)

    if user_id in main or user_id in extra:
        return "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."

    if len(main) < max_main:
        main.append(user_id)
        save_data(data)
        return "–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ ‚úÖ"

    weakest = None
    weakest_priority = 99

    for uid in main:
        existing = await member.guild.fetch_member(int(uid))
        existing_priority = get_priority(existing)

        if user_priority > existing_priority:
            if existing_priority < weakest_priority:
                weakest = uid
                weakest_priority = existing_priority

    if weakest:
        main.remove(weakest)
        extra.append(weakest)
        main.append(user_id)
        save_data(data)
        return f"–í—ã –≤—ã—Ç–µ—Å–Ω–∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ <@{weakest}> –∏ –∑–∞–Ω—è–ª–∏ –º–µ—Å—Ç–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–ø–∏—Å–∫–µ üß†"

    extra.append(user_id)
    save_data(data)
    return "–û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω, –≤—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –¥–æ–ø.—Å–ª–æ—Ç—ã üì•"

def handle_leave(member):
    data = load_data()
    user_id = str(member.id)

    removed = False
    if user_id in data["main_list"]:
        data["main_list"].remove(user_id)
        removed = True
    if user_id in data["extra_list"]:
        data["extra_list"].remove(user_id)
        removed = True

    if removed:
        save_data(data)
        return "–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–ø–∏—Å–∫–∞ ‚ùå"
    else:
        return "–í—ã –Ω–µ –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."